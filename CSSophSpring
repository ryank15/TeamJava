package teamjava.courses.project;
import java.util.Scanner;

public class CSSophSpring {
    Scanner sc = new Scanner(System.in);
	userArrayList userList = new userArrayList();

    public CSSophSpring(){
    	menu();
    }
    public void menu() {
        String menuItems = "\nSophomore Spring Courses\n"
                + "(1) = CIS 3306 Business Programming Concepts II\n"
                + "(2) = CIS 3350 Analysis of Algorithms\n"
                + "(3) = CIS 3390 Networking I\n"
                + "(4) = Lab Science Sequence(Part 2)\n"
                + "(5) = General Education Course\n"
                + "\nEnter number of choice or press Q to go back: ";
        String choice = "";
        while (!choice.equalsIgnoreCase("Q")) {
            System.out.println(menuItems);
            choice = Validator.getLine(sc, "Enter number of choice [12345Q]: ", "(?i)[12345Q]");
            if(choice.equalsIgnoreCase("Q")) {
                return;
            } else if (choice.equalsIgnoreCase("1")) {
                System.out.println( "\nDescription: \n\nA second course in business programming stressing data processing and advanced \n"
                		+ "programming techniques.");
                System.out.println("Credits: 3.0");
                System.out.print("\nWould you like to add this class to your favorites?(Y/N): \n");
        		choice = Validator.getLine(sc, "Enter choice: ", "(?i)[YN]");
        			if(choice.equalsIgnoreCase("Y"))
        			{
        				Favorites();
        			}
        			else if(choice.equalsIgnoreCase("N"))
        			{
        				System.out.println(menuItems);
        			}
            } else if (choice.equalsIgnoreCase("2")) {
                System.out.println( "\nDescription: \n\nAn introduction to the study of the theory and design of algorithms. Topics may \n"
                		+ "include analysis of Abstract Data Types (ADTs), NP-Completeness, study of various graph algorithms, searching \n"
                		+ "and sorting algorithms, and a look at algorithm design techniques such as greedy algorithms, divide and \n"
                		+ "conquer, dynamic programming, and branch-and-bound.");
                System.out.println("Credits: 3.0");
                System.out.print("\nWould you like to add this class to your favorites?(Y/N): \n");
        		choice = Validator.getLine(sc, "Enter choice: ", "(?i)[YN]");
        			if(choice.equalsIgnoreCase("Y"))
        			{
        				Favorites();
        			}
        			else if(choice.equalsIgnoreCase("N"))
        			{
        				System.out.println(menuItems);
        			}
            } else if (choice.equalsIgnoreCase("3")) {
                System.out.println( "\nDescription: \n\nIntroduction to the underlying principles of networking. Concepts of network \n"
                		+ "protocols and network applications are covered. TCP/IP principles will be taught.");
                System.out.println("Credits: 3.0");
                System.out.print("\nWould you like to add this class to your favorites?(Y/N): \n");
        		choice = Validator.getLine(sc, "Enter choice: ", "(?i)[YN]");
        			if(choice.equalsIgnoreCase("Y"))
        			{
        				Favorites();
        			}
        			else if(choice.equalsIgnoreCase("N"))
        			{
        				System.out.println(menuItems);
        			}
            } else if (choice.equalsIgnoreCase("4")) {
                System.out.println("\nDescription: \n\nA continuation of the Science Lab Sequence.");
                System.out.println("Credits: 4.0");
            } else if (choice.equalsIgnoreCase("5")) {
            	System.out.println("\nDescription: \n\nChoose any General Education Course that fits your requirements.");
				System.out.println("Credits: 3.0");
			}
        }
    }
    private void Favorites() 
	{
		String userName = Validator.getLine(sc, "\nEnter Username: ");
		String course = Validator.getLine(sc, "\nEnter Course Name and Number: ");
		Favorites favorite = new Favorites(userName, course);
		userList.Favorites(favorite);
	}

    public static void main(String[] args){
    	new CSSophSpring();
    }
}
